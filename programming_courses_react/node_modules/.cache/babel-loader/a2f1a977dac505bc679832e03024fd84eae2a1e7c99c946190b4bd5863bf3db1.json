{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\\\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 5\\\\programming_courses\\\\programming_courses_react-flask\\\\programming_courses_react\\\\src\\\\elements\\\\templates\\\\pageWithText.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Logo from './logo_template.js';\nimport { Box, colors, TextField, Button } from '@mui/material';\nimport PrevAndNextBnt from './PrevAndNextBnt.js';\nimport BackToMenuBtn from './backTomenuBtn.js';\nimport \"./pageWithText.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PageWithText(props) {\n  _s();\n  const [PageTitle, SetPageTitle] = useState(\"C++ это круто\");\n  const [Text, SetText] = useState(`По умолчанию язык C++ не содержит встроенных средств для ввода с консоли и вывода на консоль, эти средства предоставляются библиотекой iostream. В ней определены два типа: istream и ostream. istream представляет поток ввода, а ostream - поток вывода.\n\nВообще, сам термин \"поток\" в данном случае представляет последовательность символов, которая записывается на устройство ввода-вывода или считывается с него. И в данном случае под устройством ввода-вывода рассматривается консоль.\n\nДля записи или вывода символов на консоль применяется объект cout, который представляет тип ostream. А для чтения с консоли используется объект cin\n\nДля использования этих объектов в начало исходного файла необходимо подключить библиотеку iostream:`);\n  function SplitIntoParagraphs(str, divider) {\n    let res = str.split(divider).map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Text\",\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 50\n    }, this));\n    return res;\n  }\n  function SaveBtnOnClick() {\n    console.log(\"Был клик на кнопку сохранения\");\n  }\n  if (props.IsAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        paddingLeft: \"20%\",\n        paddingRight: \"20%\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"Title\",\n          label: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\",\n          defaultValue: PageTitle,\n          multiline: true,\n          fullWidth: true,\n          maxRows: 20,\n          margin: \"dense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"mainText\",\n          label: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\",\n          defaultValue: Text,\n          multiline: true,\n          fullWidth: true,\n          maxRows: 20,\n          margin: \"dense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: SaveBtnOnClick,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PrevAndNextBnt, {\n          number: props.number,\n          maxNumber: props.maxNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BackToMenuBtn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        paddingLeft: \"20%\",\n        paddingRight: \"20%\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: PageTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), SplitIntoParagraphs(Text, '\\n'), /*#__PURE__*/_jsxDEV(PrevAndNextBnt, {\n          number: props.number,\n          maxNumber: props.maxNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BackToMenuBtn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(PageWithText, \"jrmrfIGRIvgwpoRSN9edHqjeN64=\");\n_c = PageWithText;\nvar _c;\n$RefreshReg$(_c, \"PageWithText\");","map":{"version":3,"names":["React","useEffect","useState","Logo","Box","colors","TextField","Button","PrevAndNextBnt","BackToMenuBtn","jsxDEV","_jsxDEV","PageWithText","props","_s","PageTitle","SetPageTitle","Text","SetText","SplitIntoParagraphs","str","divider","res","split","map","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","SaveBtnOnClick","console","log","IsAdmin","paddingLeft","paddingRight","id","label","defaultValue","multiline","fullWidth","maxRows","margin","variant","onClick","number","maxNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/курсач/семестр 5/programming_courses/programming_courses_react-flask/programming_courses_react/src/elements/templates/pageWithText.js"],"sourcesContent":["import React,{ useEffect, useState }  from 'react';\r\nimport Logo from './logo_template.js';\r\nimport { Box,colors,TextField, Button} from '@mui/material';\r\nimport PrevAndNextBnt from './PrevAndNextBnt.js'\r\nimport BackToMenuBtn from './backTomenuBtn.js';\r\nimport \"./pageWithText.css\"\r\n\r\nexport default function PageWithText(props){\r\n\r\n\r\n    const [PageTitle,SetPageTitle] = useState(\"C++ это круто\");\r\n    const [Text,SetText] = useState(`По умолчанию язык C++ не содержит встроенных средств для ввода с консоли и вывода на консоль, эти средства предоставляются библиотекой iostream. В ней определены два типа: istream и ostream. istream представляет поток ввода, а ostream - поток вывода.\r\n\r\nВообще, сам термин \"поток\" в данном случае представляет последовательность символов, которая записывается на устройство ввода-вывода или считывается с него. И в данном случае под устройством ввода-вывода рассматривается консоль.\r\n\r\nДля записи или вывода символов на консоль применяется объект cout, который представляет тип ostream. А для чтения с консоли используется объект cin\r\n\r\nДля использования этих объектов в начало исходного файла необходимо подключить библиотеку iostream:`)\r\n\r\n    function SplitIntoParagraphs(str,divider){\r\n        let res = str.split(divider).map(item => <p className='Text'>{item}</p>)\r\n        return res\r\n    }\r\n\r\n    function SaveBtnOnClick(){\r\n\r\n        console.log(\"Был клик на кнопку сохранения\");\r\n\r\n    }\r\n\r\n    if(props.IsAdmin){\r\n        return (\r\n            <div>\r\n                <Logo/>\r\n                <Box paddingLeft={\"20%\"} paddingRight={\"20%\"}>\r\n\r\n                \r\n                <TextField\r\n                    id=\"Title\"\r\n                    label=\"Заголовок\"\r\n                    defaultValue={PageTitle}\r\n                    multiline\r\n                    fullWidth\r\n                    maxRows={20}\r\n                    margin=\"dense\"\r\n                    \r\n                />\r\n                <br/>\r\n                <TextField\r\n                    id=\"mainText\"\r\n                    label=\"Текст страницы\"\r\n                    defaultValue={Text}\r\n                    multiline\r\n                    fullWidth\r\n                    maxRows={20}\r\n                    margin=\"dense\"\r\n                    \r\n                />\r\n                <br/>\r\n                <br/>\r\n                <Button  variant=\"contained\" onClick={SaveBtnOnClick} >Сохранить</Button>\r\n                <br/>\r\n                \r\n                \r\n                <PrevAndNextBnt number={props.number} maxNumber={props.maxNumber}/>\r\n                <BackToMenuBtn />\r\n                </Box>\r\n            </div>\r\n            );\r\n    }else{\r\n        return (\r\n            <div>\r\n                <Logo/>\r\n                <Box paddingLeft={\"20%\"} paddingRight={\"20%\"}  >\r\n                <h1>{PageTitle}</h1>\r\n                {SplitIntoParagraphs(Text,'\\n')}\r\n\r\n    \r\n                <PrevAndNextBnt number={props.number} maxNumber={props.maxNumber}/>\r\n                <BackToMenuBtn/>\r\n                </Box>\r\n            </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\n       "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}