{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\\\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 5\\\\programming_courses\\\\programming_courses_react-flask\\\\programming_courses_react\\\\src\\\\elements\\\\templates\\\\showPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Logo from \"../../pictures/logo.png\";\nimport Box from '@mui/material/Box';\nimport { colors } from '@mui/material';\nimport PageWithText from './pageWithText.js';\nimport PageWithVideo from './pageWithVideo.js';\nimport QuestionPageWithOneAnswer from './questionPageWithOneAnswer.js';\nimport { proxy } from '../../consts/proxy.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowPage(props) {\n  _s();\n  const [Page, SetPage] = useState();\n  useEffect(() => {\n    async function fetch_pages() {\n      let response;\n      let cur_url = window.location.href.replace(\"http://localhost:3000/\", \"\");\n      cur_url.split(\"/\");\n      let values = {\n        \"token\": sessionStorage.getItem(\"token\"),\n        \"course_id\": props.courseID,\n        \"device\": navigator.userAgent.toString(),\n        \"_id\": sessionStorage.getItem(\"user_id\"),\n        \"num\": cur_url[3]\n      };\n      try {\n        var _response;\n        response = await proxy.post(\"/get_page\", JSON.stringify(values, null));\n        let data = (_response = response) === null || _response === void 0 ? void 0 : _response.data;\n        if (data[\"status\"] === 404) {\n          alert(data[\"info\"]);\n          document.location.href = \"http://localhost:3000/MainPage\";\n        }\n        if (data[\"status\"] === 403) {\n          alert(data[\"info\"]);\n          sessionStorage.clear();\n          document.location.href = \"http://localhost:3000/MainPage\";\n        }\n        console.log(data);\n        let page = data[\"page\"];\n        if (page[\"type\"] == \"text_page\") {\n          SetPage(/*#__PURE__*/_jsxDEV(PageWithText, {\n            IsAdmin: true,\n            courseID: props.courseID,\n            number: props.num,\n            maxNumber: data[\"countOfPages\"],\n            title: page[\"title\"],\n            text: page[\"text\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this));\n        } else if (page[\"type\"] == \"video_page\") {\n          SetPage(/*#__PURE__*/_jsxDEV(PageWithVideo, {\n            IsAdmin: true,\n            courseID: props.courseID,\n            number: props.num,\n            maxNumber: data[\"countOfPages\"],\n            title: page[\"title\"],\n            url: page[\"_url\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this));\n        } else if (page[\"type\"] == \"question_page_with_one_answer\") {\n          SetPage(/*#__PURE__*/_jsxDEV(QuestionPageWithOneAnswer, {\n            IsAdmin: true,\n            courseID: props.courseID,\n            number: props.num,\n            maxNumber: data[\"countOfPages\"],\n            title: page[\"title\"],\n            question: page[\"question\"],\n            rightAnswer: page[\"right_answer\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this));\n        }\n        //SetPages(data[\"pages\"])\n        //SetCourses(courses.map((el)=>{ return <Course  courseText={el.get(\"courseText\")} courseTitle={el.get(\"courseTitle\")} picture={pictures.get(el.get(\"picture\"))} id={el.get(\"id\")}/>}))\n      } catch (e) {\n        alert(\"Произошла ошибка сервера!\\n Мы очень стараемся ей устранить\");\n        console.log(e);\n        //window.location.href = \"http://localhost:3000/MainPage\"\n      }\n    }\n    fetch_pages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Page\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(ShowPage, \"7qMvt1H2xKF2wjcYhH8hTVOuu/k=\");\n_c = ShowPage;\nvar _c;\n$RefreshReg$(_c, \"ShowPage\");","map":{"version":3,"names":["React","useEffect","useState","Logo","Box","colors","PageWithText","PageWithVideo","QuestionPageWithOneAnswer","proxy","jsxDEV","_jsxDEV","ShowPage","props","_s","Page","SetPage","fetch_pages","response","cur_url","window","location","href","replace","split","values","sessionStorage","getItem","courseID","navigator","userAgent","toString","_response","post","JSON","stringify","data","alert","document","clear","console","log","page","IsAdmin","number","num","maxNumber","title","text","fileName","_jsxFileName","lineNumber","columnNumber","url","question","rightAnswer","e","children","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/курсач/семестр 5/programming_courses/programming_courses_react-flask/programming_courses_react/src/elements/templates/showPage.js"],"sourcesContent":["import React,{ useEffect, useState }  from 'react';\r\nimport Logo from \"../../pictures/logo.png\"\r\nimport Box from '@mui/material/Box';\r\nimport { colors } from '@mui/material';\r\nimport PageWithText from './pageWithText.js';\r\nimport PageWithVideo from './pageWithVideo.js';\r\nimport QuestionPageWithOneAnswer from './questionPageWithOneAnswer.js';\r\nimport { proxy } from '../../consts/proxy.js';\r\n\r\nexport default  function  ShowPage (props){\r\n    const [Page,SetPage] = useState() ;\r\n\r\n\r\n    \r\n    useEffect(()=>{async function fetch_pages()  {\r\n                \r\n            \r\n                \r\n                let response;\r\n                let cur_url =  window.location.href.replace(\"http://localhost:3000/\",\"\")\r\n                cur_url.split(\"/\")\r\n                let values = {\"token\":sessionStorage.getItem(\"token\"),\"course_id\":props.courseID,\"device\":navigator.userAgent.toString(),\"_id\":sessionStorage.getItem(\"user_id\"),\"num\":cur_url[3]}\r\n                \r\n                try\r\n                {\r\n                    response = await proxy.post(\"/get_page\", JSON.stringify(values, null));\r\n                    \r\n                    \r\n                    let data = response?.data\r\n                   \r\n                    if(data[\"status\"]===404){\r\n                        alert(data[\"info\"]);\r\n                        document.location.href = \"http://localhost:3000/MainPage\"\r\n                    }\r\n                    if(data[\"status\"]===403){\r\n                        alert(data[\"info\"]);\r\n                        sessionStorage.clear()\r\n                        document.location.href = \"http://localhost:3000/MainPage\"\r\n                    }\r\n                    console.log(data)\r\n                    let page=data[\"page\"];\r\n                   \r\n                    if(page[\"type\"]==\"text_page\"){\r\n                        SetPage(<PageWithText IsAdmin={true} courseID={props.courseID} number={props.num} maxNumber={data[\"countOfPages\"]} title ={page[\"title\"]} text={page[\"text\"]}/>)\r\n                    }else if(page[\"type\"]==\"video_page\"){\r\n                        SetPage(<PageWithVideo IsAdmin={true} courseID={props.courseID} number={props.num} maxNumber={data[\"countOfPages\"]} title ={page[\"title\"]} url={page[\"_url\"]}/>)\r\n                    }else if(page[\"type\"]==\"question_page_with_one_answer\"){\r\n                        SetPage(<QuestionPageWithOneAnswer IsAdmin={true} courseID={props.courseID} number={props.num} maxNumber={data[\"countOfPages\"]} title ={page[\"title\"]} question={page[\"question\"]  }  rightAnswer={page[\"right_answer\"]}/>)\r\n                    }\r\n                    //SetPages(data[\"pages\"])\r\n                    //SetCourses(courses.map((el)=>{ return <Course  courseText={el.get(\"courseText\")} courseTitle={el.get(\"courseTitle\")} picture={pictures.get(el.get(\"picture\"))} id={el.get(\"id\")}/>}))\r\n                    \r\n                    \r\n                }\r\n                catch(e)\r\n                {\r\n                    alert(\"Произошла ошибка сервера!\\n Мы очень стараемся ей устранить\")\r\n                    console.log(e);\r\n                    //window.location.href = \"http://localhost:3000/MainPage\"\r\n                }\r\n        \r\n                \r\n              }fetch_pages();}, []);\r\n    return(\r\n    <div>\r\n        {Page}\r\n        \r\n              \r\n    </div>\r\n        )\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}