{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\\\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 5\\\\programming_courses\\\\programming_courses_react-flask\\\\programming_courses_react\\\\src\\\\elements\\\\auth_reg.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, colors, TextField, Button, Checkbox } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auth_reg(props) {\n  _s();\n  const [IsReg, SetIsReg] = useState(false);\n  const [EmailError, SetEmailError] = useState(false);\n  const [PasswdError, SetPasswdError] = useState(false);\n  const [Passwd2Error, SetPasswd2Error] = useState(false);\n  const [Reg, setReg] = useState(/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 35\n  }, this));\n  const EMAIL_REGEXP = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\n  const handleChangeIsReg = event => {\n    SetIsReg(event.target.checked);\n    if (event.target.checked) {\n      setReg(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          error: Passwd2Error,\n          id: \"reg_passwd_2\",\n          label: \"\\u0415\\u0449\\u0451 \\u0440\\u0430\\u0437\",\n          type: \"password\",\n          helperText: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          margin: \"dense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this));\n    } else {\n      setReg(/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this));\n    }\n  };\n  const validateEmail = email => {\n    return EMAIL_REGEXP.test(email);\n  };\n  async function authBtnOnClick() {\n    let response = null;\n    validateEmail();\n    let values;\n    if (!IsReg) {\n      try {\n        var _response;\n        response = await My_proxy.post(\"auth\", JSON.stringify(values, null));\n        console.log((_response = response) === null || _response === void 0 ? void 0 : _response.data);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AuthPage\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      error: EmailError,\n      id: \"Email_Field\",\n      label: \"\\u041F\\u043E\\u0447\\u0442\\u0430\",\n      defaultValue: props.UserEMail,\n      helperText: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u0432\\u0443\\u044E \\u043F\\u043E\\u0447\\u0442\\u0443\",\n      margin: \"dense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: PasswdError,\n      id: \"passwd\",\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      helperText: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      margin: \"dense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), Reg, /*#__PURE__*/_jsxDEV(Checkbox, {\n      id: \"IsRefCheckBox\",\n      onChange: handleChangeIsReg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: authBtnOnClick,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(Auth_reg, \"+sD1bgBFdmIQGAm08NLT+6nYhr0=\");\n_c = Auth_reg;\nvar _c;\n$RefreshReg$(_c, \"Auth_reg\");","map":{"version":3,"names":["React","useEffect","useState","Box","colors","TextField","Button","Checkbox","jsxDEV","_jsxDEV","Auth_reg","props","_s","IsReg","SetIsReg","EmailError","SetEmailError","PasswdError","SetPasswdError","Passwd2Error","SetPasswd2Error","Reg","setReg","fileName","_jsxFileName","lineNumber","columnNumber","EMAIL_REGEXP","handleChangeIsReg","event","target","checked","children","error","id","label","type","helperText","margin","validateEmail","email","test","authBtnOnClick","response","values","_response","My_proxy","post","JSON","stringify","console","log","data","e","className","defaultValue","UserEMail","onChange","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/курсач/семестр 5/programming_courses/programming_courses_react-flask/programming_courses_react/src/elements/auth_reg.js"],"sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport { Box,colors,TextField,Button,Checkbox } from '@mui/material';\r\n\r\n\r\n\r\n \r\nexport default  function Auth_reg (props){\r\n\r\n    const [IsReg,SetIsReg] = useState(false);\r\n    const [EmailError,SetEmailError] = useState(false);\r\n    const [PasswdError,SetPasswdError] = useState(false);\r\n    const [Passwd2Error,SetPasswd2Error] = useState(false);\r\n    const [Reg,setReg] = useState(<div></div>)\r\n\r\n    const EMAIL_REGEXP = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\n\r\n    const handleChangeIsReg = (event) => {\r\n        SetIsReg(event.target.checked)\r\n       \r\n        if(event.target.checked){\r\n            setReg(<div >\r\n            <TextField\r\n                error={Passwd2Error}\r\n                id=\"reg_passwd_2\"\r\n                label=\"Ещё раз\"\r\n                type=\"password\"\r\n                helperText=\"Повторите ваш пароль\"\r\n                margin=\"dense\"\r\n            />\r\n            <br/>\r\n        </div>)\r\n        }else{\r\n            setReg(<div></div>);\r\n        }\r\n    };\r\n\r\n    const validateEmail = (email) => {\r\n        return EMAIL_REGEXP.test(email)\r\n    };\r\n\r\n   \r\n    async function authBtnOnClick(){\r\n        let response = null;\r\n        validateEmail();\r\n\r\n        let values\r\n        if(!IsReg){\r\n            \r\n                try\r\n                {\r\n                    response = await My_proxy.post(\"auth\", JSON.stringify(values, null));\r\n                    console.log(response?.data);\r\n                }\r\n                catch(e)\r\n                {\r\n                    console.log(e);\r\n                }\r\n        }\r\n\r\n    }\r\n   \r\n    return(\r\n        <div className='AuthPage'>\r\n            <TextField\r\n                error={EmailError}\r\n                id=\"Email_Field\"\r\n                label=\"Почта\"\r\n                defaultValue={props.UserEMail}\r\n                helperText=\"Введите новую почту\"\r\n                margin=\"dense\"\r\n            />\r\n            <br/>\r\n            <TextField\r\n                error={PasswdError}\r\n                id=\"passwd\"\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                helperText=\"Введите ваш пароль\"\r\n                margin=\"dense\"\r\n            />\r\n            <br/>\r\n\r\n            {Reg}\r\n\r\n            <Checkbox\r\n                id=\"IsRefCheckBox\"\r\n                onChange={handleChangeIsReg}\r\n            />\r\n            <label>Регистрация?</label>\r\n            <br/>\r\n            <Button variant=\"contained\" onClick={authBtnOnClick} >Отправить</Button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}